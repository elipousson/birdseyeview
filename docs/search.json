[{"path":"https://elipousson.github.io/birdseyeview/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 birdseyeview authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://elipousson.github.io/birdseyeview/articles/boundary_location_maps.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Boundaries and marked locations on maps","text":"","code":"# library(birdseyeview) library(mapbaltimore) library(ggplot2) library(overedge) library(birdseyeview)"},{"path":"https://elipousson.github.io/birdseyeview/articles/boundary_location_maps.html","id":"set-parameters","dir":"Articles","previous_headings":"Getting started","what":"Set parameters","title":"Boundaries and marked locations on maps","text":"","code":"params <- list(   data = list(     type = \"neighborhoods\",     package = \"mapbaltimore\"   ),   map = list(     bbox_dist = 300,     mapbox_crs = 3857,     context = \"baltimore_city\"   ),   names = list(     area = c(\"Cheswolde\", \"Cross Country\", \"Fallstaff\", \"Glen\", \"Mount Washington\"),     near = c(\"Pimlico Good Neighbors\", \"Arlington\", \"Central Park Heights\"),     extra = c(\"Pikesville\", \"Owings Mills\")   ),   labels = list(     area = \"Neighborhood coalition\",     near = \"CHAI project area\",     other = \"SNAP Planning Area\"   ),   page = list(     name = \"letter\",     orientation = \"landscape\",     margin = \"none\"   ) )"},{"path":"https://elipousson.github.io/birdseyeview/articles/boundary_location_maps.html","id":"get-locations","dir":"Articles","previous_headings":"Getting started","what":"Get locations","title":"Boundaries and marked locations on maps","text":"","code":"area <-   get_location(     type = params$data$type,     package = params$data$package,     name = params$names$area   )  near_area <-   get_location(     type = params$data$type,     package = params$data$package,     name = params$names$near   )  area_ext <-   get_location(     type = params$data$type,     package = params$data$package,     name = c(params$names$area, params$names$near),     union = TRUE,     label = params$labels$other   )  context <-   suppressWarnings(     get_location(       type = params$map$context,       package = params$data$package,       location = NULL     )   )  params$bbox <-   st_bbox_ext(     x = area_ext,     dist = params$map$bbox_dist   )  params$map$bbox_orientation <-   sf_bbox_asp(     bbox = params$bbox,     orientation = TRUE   )"},{"path":"https://elipousson.github.io/birdseyeview/articles/boundary_location_maps.html","id":"paper-set-up","dir":"Articles","previous_headings":"Getting started","what":"Paper set up","title":"Boundaries and marked locations on maps","text":"","code":"params$paper <-   get_paper(     paper = params$page$name,     orientation = params$map$bbox_orientation   )  params$margin <-   get_margin(     margin = params$page$margin,     paper = params$paper$name,     orientation = params$paper$orientation   )  params$map$block_asp <-   get_asp(     paper = params$paper$name,     orientation = params$paper$orientation,     margin = params$page$margin,     block_asp = TRUE   )   params$bbox_paper <-   st_bbox_ext(     x = params$bbox,     asp = params$map$block_asp   )"},{"path":[]},{"path":"https://elipousson.github.io/birdseyeview/articles/boundary_location_maps.html","id":"mapbox","dir":"Articles","previous_headings":"Make a basemap","what":"Mapbox","title":"Boundaries and marked locations on maps","text":"","code":"layer_snapbox <-   function(bbox,            map_style = snapbox::mapbox_gallery_moonlight(), # snapbox::mapbox_galley_pencil(),            scale_ratio = 1,            access_token = Sys.getenv(\"MAPBOX_SECRET_TOKEN\"),            basemap = FALSE,            neatline = TRUE,            ...) {      # Set appropriate CRS for Mapbox     crs_mapbox <- 3857      if (check_sf(bbox)) {       bbox <- sf::st_bbox(bbox)     }      bbox <- sf_bbox_transform(       bbox = bbox,       crs = crs_mapbox     )      if (basemap) {       snapbox_layer <- ggplot2::ggplot()     } else {       snapbox_layer <- NULL     }      # Get Mapbox map     snapbox_layer <-       list(         snapbox_layer,         snapbox::layer_mapbox(           area = bbox,           map_style = map_style,           scale_ratio = scale_ratio,           mapbox_api_access_token = access_token         )       )      if (neatline) {       snapbox_layer <-         list(           snapbox_layer,           overedge::layer_neatline(             data = bbox,             ...           )         )     }      return(snapbox_layer)   }  layer_location_mapbox <-   layer_snapbox(     bbox = params$bbox,     scale = 0.7,     basemap = FALSE,     neatline = TRUE,     expand = TRUE   )  basemap_mapbox <-   ggplot() +   layer_location_mapbox"},{"path":"https://elipousson.github.io/birdseyeview/articles/boundary_location_maps.html","id":"streets-data","dir":"Articles","previous_headings":"Make a basemap","what":"Streets data","title":"Boundaries and marked locations on maps","text":"","code":"layer_msa_streets <-   # NOTE: This layer could be replicated using overedge along but is isn't essential   mapbaltimore::layer_area_streets(     area = sf_bbox_to_sf(params$bbox_paper),     color = \"gray60\",     msa = TRUE,     size = 0.25   ) #> Reading layer `baltimore_msa_streets' from data source  #>   `/Users/elipousson/Library/Caches/mapbaltimore/baltimore_msa_streets.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 792 features and 22 fields (with 7 geometries empty) #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 413476.4 ymin: 180341.8 xmax: 433957.6 ymax: 198210.8 #> Projected CRS: NAD83(HARN) / Maryland  layer_location_streets <-   layer_location_data(     data = \"streets\",     package = params$data$package,     location = params$bbox_paper   ) basemap_alternate <-   ggplot() +   layer_location_data(     data = baltimore_msa_counties,     fill = \"lightblue\",     alpha = 0.2   ) +   layer_msa_streets basemap_mapbox +   layer_location_data(     data = area_ext,     fill = \"yellow\",     alpha = 0.25,     crs = params$map$mapbox_crs   ) +   layer_show_location(     data = area,     size = 1,     color = \"gray20\",     linetype = \"solid\"   ) +   layer_location_data(     data = area,     geom = \"label\",     mapping = aes(label = name),     size = 3,     color = \"black\"   ) #> Coordinate system already present. Adding new coordinate system, which will replace the existing one."},{"path":[]},{"path":[]},{"path":"https://elipousson.github.io/birdseyeview/articles/boundary_location_maps.html","id":"inset-map","dir":"Articles","previous_headings":"Common map types","what":"Inset map","title":"Boundaries and marked locations on maps","text":"","code":"inset <-   ggplot() +   layer_show_context(     data = area,     fill = \"blue\",     alpha = 0.5,     context = context,     context_aes = list(       color = \"gray40\",       size = 0.1,       fill = \"white\",       alpha = 0.9     ),     crs = 3857   ) #> Warning: Duplicated aesthetics after name standardisation: alpha  make_inset_map(   map = basemap_mapbox,   inset = inset,   position = \"topright\",   nudge_y = -0.05 )"},{"path":"https://elipousson.github.io/birdseyeview/articles/boundary_location_maps.html","id":"overlapping-boundaries","dir":"Articles","previous_headings":"Common map types","what":"Overlapping boundaries","title":"Boundaries and marked locations on maps","text":"","code":"params$map$admin_boundaries <-   c(\"council_districts\", \"legislative_districts\")  # Apply a negative buffer to avoid overlap with state legislative District 40 map_admin_boundaries <- function(type = NULL) {   admin_boundaries <-     get_location_data(       data = type,       package = params$data$package,       location = params$bbox,       crop = TRUE,       crs = 3857     )    basemap_mapbox +     layer_location_data(       data = admin_boundaries,       aes(fill = name),       color = NA,       alpha = 0.8     ) +     layer_location_data(       data = admin_boundaries,       geom = \"label\",       location = params$bbox_paper,       aes(label = name, fill = name),       color = \"black\",       size = 7,       label.padding = unit(0.5, \"lines\"),       hjust = 0.5,       vjust = 0.5     ) +     overedge::theme_legend(       position = \"none\"     ) }  purrr::map(   params$map$admin_boundaries,     ~ map_admin_boundaries(.x)   ) #> Coordinate system already present. Adding new coordinate system, which will replace the existing one. #> Coordinate system already present. Adding new coordinate system, which will replace the existing one. #> [[1]] #>  #> [[2]]"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://elipousson.github.io/birdseyeview/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer.","code":""},{"path":"https://elipousson.github.io/birdseyeview/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2022). birdseyeview: Make Planning Maps, Tables, Visualizations. R package version 0.1.0, https://elipousson.github.io/birdseyeview/.","code":"@Manual{,   title = {birdseyeview: Make Planning Maps, Tables, and Visualizations},   author = {Eli Pousson},   year = {2022},   note = {R package version 0.1.0},   url = {https://elipousson.github.io/birdseyeview/}, }"},{"path":"https://elipousson.github.io/birdseyeview/index.html","id":"birdseyeview","dir":"","previous_headings":"","what":"Make Planning Maps, Tables, and Visualizations","title":"Make Planning Maps, Tables, and Visualizations","text":"goal birdseyeview make easy create types maps, plots, tables used community plans. package designed use overedge package data packages like mapbaltimore bcpss create reproducible maps tables range needs.","code":""},{"path":"https://elipousson.github.io/birdseyeview/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make Planning Maps, Tables, and Visualizations","text":"can install development version birdseyeview like :","code":"remotes::install_github(\"elipousson/birdseyeview\")"},{"path":"https://elipousson.github.io/birdseyeview/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Make Planning Maps, Tables, and Visualizations","text":"","code":"library(birdseyeview) library(ggplot2) library(sf) #> Warning: package 'sf' was built under R version 4.1.1 #> Linking to GEOS 3.9.1, GDAL 3.2.3, PROJ 7.2.1; sf_use_s2() is TRUE"},{"path":"https://elipousson.github.io/birdseyeview/reference/birdseyeview-package.html","id":null,"dir":"Reference","previous_headings":"","what":"birdseyeview: Make Planning Maps, Tables, and Visualizations — birdseyeview-package","title":"birdseyeview: Make Planning Maps, Tables, and Visualizations — birdseyeview-package","text":"package helps create maps, tables, figures planning documents using open spatial data. birdseyeview designed work overedge package relies sf, ggplot2, gt.","code":""},{"path":[]},{"path":"https://elipousson.github.io/birdseyeview/reference/birdseyeview-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"birdseyeview: Make Planning Maps, Tables, and Visualizations — birdseyeview-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID)","code":""},{"path":"https://elipousson.github.io/birdseyeview/reference/layer_show_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a map layer showing a location in context of another area or location — layer_show_context","title":"Create a map layer showing a location in context of another area or location — layer_show_context","text":"Intended use inset_map function.","code":""},{"path":"https://elipousson.github.io/birdseyeview/reference/layer_show_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a map layer showing a location in context of another area or location — layer_show_context","text":"","code":"layer_show_context(   data = NULL,   fill = \"gray70\",   color = \"black\",   context = NULL,   context_aes = list(fill = \"white\", color = \"black\", alpha = 1, ...),   crs = NULL,   neatline = TRUE,   ... )"},{"path":"https://elipousson.github.io/birdseyeview/reference/layer_show_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a map layer showing a location in context of another area or location — layer_show_context","text":"data sf object including data area. data may also url file path. data can name data object , package filetype provided, cached external file. context sf bbox object context area `geom` layer context_aes list aesthetic attributes context area; must include fill color; defaults list(fill = \"white\", color = \"black\", ...) crs coordinate reference system return neatline `TRUE`, add neatline layer returned layer ... Parameters passed selected geom","code":""},{"path":[]},{"path":"https://elipousson.github.io/birdseyeview/reference/layer_show_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a location border into a ggplot2 map — layer_show_location","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"Helper function make ggplot2 layer data returned get_location","code":""},{"path":"https://elipousson.github.io/birdseyeview/reference/layer_show_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"","code":"layer_show_location(   mapping = ggplot2::aes(),   data = NULL,   type = NULL,   name = NULL,   id = NULL,   location = NULL,   label_geom = NULL,   name_col = \"name\",   id_col = \"id\",   index = NULL,   label = NULL,   union = FALSE,   smooth = TRUE,   crs = NULL,   color = \"black\",   linetype = \"dashed\",   size = 2,   fill = NA,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   mask = FALSE,   neatline = FALSE,   ... )"},{"path":"https://elipousson.github.io/birdseyeview/reference/layer_show_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data Data location show. type Type location return. Type can sf object, e.g. data frame multiple neighborhoods character string can passed get_location_data. index provided, character can also character string match name list. name Location name return. id Location id return. id coerced character numeric match class id_col type. location address, bounding box (bbox), simple feature (sf) object passed st_filter. valid address addresses geocoded geo), converted simple feature object, used spatial filter. bbox objects converted using sf_bbox_to_sf(). Multiple addresses supported. name_col Column name type name values, Default: 'name' Required name provided. id_col Column name type id values, Default: 'id'. Required id provided. index Optional list used match type data, Default: NULL label label type (e.g. \"text\", \"label\") union TRUE, location geometry unioned st_union names combined single value. Default: FALSE. crs coordinate reference system return color Color location; defaults \"black\". linetype Line type location; defaults \"dashed\". fill Fill location; defaults \"NA\". dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit unit adjust location dist diag_ratio; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. mask sf bbox object define edge mask. diag_ratio, dist, asp parameters ignored mask provided. defaults NULL neatline TRUE, add layer_neatline expand = TRUE; defaults FALSE. ... Additional parameters passed get_location data `NULL`.","code":""},{"path":"https://elipousson.github.io/birdseyeview/reference/layer_show_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"list ggplot2 geoms","code":""},{"path":[]},{"path":"https://elipousson.github.io/birdseyeview/reference/make_inset_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a map with an inset context map using ggplot2 — make_inset_map","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"Works `layer_show_context`","code":""},{"path":"https://elipousson.github.io/birdseyeview/reference/make_inset_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"","code":"make_inset_map(   map = NULL,   inset = NULL,   location = NULL,   context = NULL,   position = \"bottomright\",   nudge_x = 0,   nudge_y = 0,   ... )"},{"path":"https://elipousson.github.io/birdseyeview/reference/make_inset_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"map plot map created ggplot2 inset plot map created ggplot2 location sf bbox object context sf bbox object location context, Default: NULL position inset map position, Default: 'bottomright' nudge_x nudge X position inset map, Default: 0 nudge_y nudge Y position inset map, Default: 0 ... Additional parameters passed layer_show_context","code":""},{"path":"https://elipousson.github.io/birdseyeview/reference/make_inset_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"ggplot2 inset map added using patchwork","code":""},{"path":[]},{"path":"https://elipousson.github.io/birdseyeview/reference/make_inset_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"","code":"if (FALSE) { if (interactive()) {   map <-     ggplot2::ggplot() +     overedge::layer_location_data(data = mapbaltimore::get_area(\"neighborhood\", \"Harwood\")) +     overedge::layer_neatline(       data = mapbaltimore::get_area(\"neighborhood\", \"Harwood\"),       asp = \"8.5:11\"     )    location <-     mapbaltimore::get_area(\"neighborhood\", \"Harwood\")    context <-     mapbaltimore::baltimore_city    inset_context_map(     map = map,     location = location,     context = context,     position = \"bottomright\",     nudge_x = -0.05,     nudge_y = 0.05   ) } }"},{"path":"https://elipousson.github.io/birdseyeview/reference/make_marker_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Make marker map — make_marker_map","title":"Make marker map — make_marker_map","text":"Make marker map Make group layers Prep markers mapping","code":""},{"path":"https://elipousson.github.io/birdseyeview/reference/make_marker_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make marker map — make_marker_map","text":"","code":"make_marker_map(   data,   mapping = ggplot2::aes(),   prep = TRUE,   groupname_col = \"group\",   groupmeta = NULL,   style = NULL,   crs = NULL,   fn = NULL,   ... )  make_group_layers(   data,   mapping = ggplot2::aes(),   groupname_col = \"group\",   layers = FALSE,   ... )  prep_markers(   data = NULL,   groupname_col = \"group\",   groupmeta = NULL,   geocode = FALSE,   address_col = \"address\",   geometry = \"point\",   crs = NULL,   fn = NULL,   ... )"},{"path":"https://elipousson.github.io/birdseyeview/reference/make_marker_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make marker map — make_marker_map","text":"data Data mapping mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. crs coordinate reference system return fn Function apply data returning. ... Parameters passed selected geom layers defaults FALSE","code":""},{"path":"https://elipousson.github.io/birdseyeview/reference/tbl_photo_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a numbered photo key table — tbl_photo_key","title":"Create a numbered photo key table — tbl_photo_key","text":"Create numbered photo key table","code":""},{"path":"https://elipousson.github.io/birdseyeview/reference/tbl_photo_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a numbered photo key table — tbl_photo_key","text":"","code":"tbl_photo_key(   data,   img_width = 320,   asp = 0.75,   photo_col = \"photo\",   title_col = \"title\",   number = FALSE,   orientation = NULL )"},{"path":"https://elipousson.github.io/birdseyeview/reference/tbl_photo_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a numbered photo key table — tbl_photo_key","text":"data sf object data frame photo column containing file path url photos img_width Image width. photo_col Photo path/url column name. title_col Photo title/description column name. img_height Image height.","code":""}]
