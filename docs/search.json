[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 birdseyeview authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/boundary_location_maps.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Boundaries and marked locations on maps","text":"","code":"# library(birdseyeview) library(mapbaltimore) library(ggplot2) library(overedge) library(birdseyeview)"},{"path":"/articles/boundary_location_maps.html","id":"set-parameters","dir":"Articles","previous_headings":"Getting started","what":"Set parameters","title":"Boundaries and marked locations on maps","text":"","code":"params <- list(   data = list(     type = \"neighborhoods\",     package = \"mapbaltimore\"   ),   map = list(     bbox_dist = 300,     mapbox_crs = 3857,     context = \"baltimore_city\"   ),   names = list(     area = c(\"Cheswolde\", \"Cross Country\", \"Fallstaff\", \"Glen\", \"Mount Washington\"),     near = c(\"Pimlico Good Neighbors\", \"Arlington\", \"Central Park Heights\"),     extra = c(\"Pikesville\", \"Owings Mills\")   ),   labels = list(     area = \"Neighborhood coalition\",     near = \"CHAI project area\",     other = \"SNAP Planning Area\"   ),   page = list(     name = \"letter\",     orientation = \"landscape\",     margin = \"none\"   ) )"},{"path":"/articles/boundary_location_maps.html","id":"get-locations","dir":"Articles","previous_headings":"Getting started","what":"Get locations","title":"Boundaries and marked locations on maps","text":"","code":"area <-   get_location(     type = params$data$type,     package = params$data$package,     name = params$names$area   )  near_area <-   get_location(     type = params$data$type,     package = params$data$package,     name = params$names$near   )  area_ext <-   get_location(     type = params$data$type,     package = params$data$package,     name = c(params$names$area, params$names$near),     union = TRUE,     label = params$labels$other   )  context <-   suppressWarnings(     get_location(       type = params$map$context,       package = params$data$package,       location = NULL     )   )  params$bbox <-   st_bbox_ext(     x = area_ext,     dist = params$map$bbox_dist   )  params$map$bbox_orientation <-   sf_bbox_asp(     bbox = params$bbox,     orientation = TRUE   )"},{"path":"/articles/boundary_location_maps.html","id":"paper-set-up","dir":"Articles","previous_headings":"Getting started","what":"Paper set up","title":"Boundaries and marked locations on maps","text":"","code":"params$paper <-   get_paper(     paper = params$page$name,     orientation = params$map$bbox_orientation   )  params$margin <-   get_margin(     margin = params$page$margin,     paper = params$paper$name,     orientation = params$paper$orientation   )  params$map$block_asp <-   get_asp(     paper = params$paper$name,     orientation = params$paper$orientation,     margin = params$page$margin,     block_asp = TRUE   )   params$bbox_paper <-   st_bbox_ext(     x = params$bbox,     asp = params$map$block_asp   )"},{"path":[]},{"path":"/articles/boundary_location_maps.html","id":"mapbox","dir":"Articles","previous_headings":"Make a basemap","what":"Mapbox","title":"Boundaries and marked locations on maps","text":"","code":"layer_snapbox <-   function(bbox,            map_style = snapbox::mapbox_gallery_moonlight(), # snapbox::mapbox_galley_pencil(),            scale_ratio = 1,            access_token = Sys.getenv(\"MAPBOX_SECRET_TOKEN\"),            basemap = FALSE,            neatline = TRUE,            ...) {      # Set appropriate CRS for Mapbox     crs_mapbox <- 3857      if (check_sf(bbox)) {       bbox <- sf::st_bbox(bbox)     }      bbox <- sf_bbox_transform(       bbox = bbox,       crs = crs_mapbox     )      if (basemap) {       snapbox_layer <- ggplot2::ggplot()     } else {       snapbox_layer <- NULL     }      # Get Mapbox map     snapbox_layer <-       list(         snapbox_layer,         snapbox::layer_mapbox(           area = bbox,           map_style = map_style,           scale_ratio = scale_ratio,           mapbox_api_access_token = access_token         )       )      if (neatline) {       snapbox_layer <-         list(           snapbox_layer,           overedge::layer_neatline(             data = bbox,             ...           )         )     }      return(snapbox_layer)   }  layer_location_mapbox <-   layer_snapbox(     bbox = params$bbox,     scale = 0.7,     basemap = FALSE,     neatline = TRUE,     expand = TRUE   )  basemap_mapbox <-   ggplot() +   layer_location_mapbox"},{"path":"/articles/boundary_location_maps.html","id":"streets-data","dir":"Articles","previous_headings":"Make a basemap","what":"Streets data","title":"Boundaries and marked locations on maps","text":"","code":"layer_msa_streets <-   # NOTE: This layer could be replicated using overedge along but is isn't essential   mapbaltimore::layer_area_streets(     area = sf_bbox_to_sf(params$bbox_paper),     color = \"gray60\",     msa = TRUE,     size = 0.25   ) #> Reading layer `baltimore_msa_streets' from data source  #>   `/Users/elipousson/Library/Caches/mapbaltimore/baltimore_msa_streets.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 792 features and 22 fields (with 7 geometries empty) #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 413476.4 ymin: 180341.8 xmax: 433957.6 ymax: 198210.8 #> Projected CRS: NAD83(HARN) / Maryland  layer_location_streets <-   layer_location_data(     data = \"streets\",     package = params$data$package,     location = params$bbox_paper   ) basemap_alternate <-   ggplot() +   layer_location_data(     data = baltimore_msa_counties,     fill = \"lightblue\",     alpha = 0.2   ) +   layer_msa_streets basemap_mapbox +   layer_location_data(     data = area_ext,     fill = \"yellow\",     alpha = 0.25,     crs = params$map$mapbox_crs   ) +   layer_show_location(     data = area,     size = 1,     color = \"gray20\",     linetype = \"solid\"   ) +   layer_location_data(     data = area,     geom = \"label\",     mapping = aes(label = name),     size = 3,     color = \"black\"   ) #> Coordinate system already present. Adding new coordinate system, which will replace the existing one."},{"path":[]},{"path":[]},{"path":"/articles/boundary_location_maps.html","id":"inset-map","dir":"Articles","previous_headings":"Common map types","what":"Inset map","title":"Boundaries and marked locations on maps","text":"","code":"inset <-   ggplot() +   layer_show_context(     data = area,     fill = \"blue\",     alpha = 0.5,     context = context,     context_aes = list(       color = \"gray40\",       size = 0.1,       fill = \"white\",       alpha = 0.9     ),     crs = 3857   )  make_inset_map(   map = basemap_mapbox,   inset = inset,   position = \"topright\",   nudge_y = -0.05 )"},{"path":"/articles/boundary_location_maps.html","id":"overlapping-boundaries","dir":"Articles","previous_headings":"Common map types","what":"Overlapping boundaries","title":"Boundaries and marked locations on maps","text":"","code":"params$map$admin_boundaries <-   c(\"council_districts\", \"legislative_districts\")  # Apply a negative buffer to avoid overlap with state legislative District 40 map_admin_boundaries <- function(type = NULL) {   admin_boundaries <-     get_location_data(       data = type,       package = params$data$package,       location = params$bbox,       crop = TRUE,       crs = 3857     )    basemap_mapbox +     layer_location_data(       data = admin_boundaries,       aes(fill = name),       color = NA,       alpha = 0.8     ) +     layer_location_data(       data = admin_boundaries,       geom = \"label\",       location = params$bbox_paper,       aes(label = name, fill = name),       color = \"black\",       size = 7,       label.padding = unit(0.5, \"lines\"),       hjust = 0.5,       vjust = 0.5     ) +     overedge::theme_legend(       position = \"none\"     ) }  purrr::map(   params$map$admin_boundaries,     ~ map_admin_boundaries(.x)   ) #> Coordinate system already present. Adding new coordinate system, which will replace the existing one. #> Coordinate system already present. Adding new coordinate system, which will replace the existing one. #> [[1]] #>  #> [[2]]"},{"path":[]},{"path":[]},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eli Pousson. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pousson E (2022). birdseyeview: Make Planning Maps, Tables, Visualizations. R package version 0.1.0, https://elipousson.github.io/birdseyeview/.","code":"@Manual{,   title = {birdseyeview: Make Planning Maps, Tables, and Visualizations},   author = {Eli Pousson},   year = {2022},   note = {R package version 0.1.0},   url = {https://elipousson.github.io/birdseyeview/}, }"},{"path":"/index.html","id":"birdseyeview","dir":"","previous_headings":"","what":"Make Planning Maps, Tables, and Visualizations","title":"Make Planning Maps, Tables, and Visualizations","text":"goal birdseyeview make easy create types maps, plots, tables used community plans. package designed use overedge package data packages like mapbaltimore bcpss create reproducible maps tables range needs.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make Planning Maps, Tables, and Visualizations","text":"can install development version birdseyeview like :","code":"remotes::install_github(\"elipousson/birdseyeview\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Make Planning Maps, Tables, and Visualizations","text":"","code":"library(birdseyeview) library(overedge)"},{"path":"/index.html","id":"make-tables","dir":"","previous_headings":"Example","what":"Make tables","title":"Make Planning Maps, Tables, and Visualizations","text":"","code":"parks <-   get_location_data(     data = \"parks\",     package = \"mapbaltimore\"   )  parks %>%   dplyr::slice_head(n = 4) %>%   dplyr:::select(name, address, park_district, acres, geometry) %>%   dplyr::group_by(park_district) %>%   gt::gt() %>%   gt_geom_sf_rows(fill = \"forestgreen\", color = \"lightgreen\", size = 6) park_photos <-   overedge::get_flickr_photos(     user_id = \"baltimoreheritage\",     tags = \"druidhillpark\",     img_size = \"m\",     sort = \"date-posted\",     per_page = 20   )  park_photos[1:6, ] %>%   dplyr::select(title, datetaken, image_height, image_width, image_url) %>%   tbl_photo_key(photo_col = \"image_url\", orientation = \"landscape\", number = TRUE)"},{"path":"/index.html","id":"make-maps","dir":"","previous_headings":"Example","what":"Make maps","title":"Make Planning Maps, Tables, and Visualizations","text":"","code":"library(ggplot2) ggplot() +   layer_show_context(     data = parks[245, ],     fill = \"green\",     context = parks,     context_aes = list(fill = \"forestgreen\", color = \"gray60\", alpha = 1)   ) park_district_layers <-   make_group_layers(     data = parks %>% sf::st_centroid(),     mapping = aes(color = name),     groupname_col = \"park_district\"   ) #> Warning in st_centroid.sf(.): st_centroid assumes attributes are constant over #> geometries of x  clifton_district <-   get_location(     type = \"park_districts\",     package = \"mapbaltimore\",     name = \"Clifton\"   )  ggplot() +   park_district_layers[[1]] +   guides(color = \"none\") +   layer_show_location(     data = clifton_district   ) +   theme_void()"},{"path":"/reference/birdseyeview-package.html","id":null,"dir":"Reference","previous_headings":"","what":"birdseyeview: Make Planning Maps, Tables, and Visualizations — birdseyeview-package","title":"birdseyeview: Make Planning Maps, Tables, and Visualizations — birdseyeview-package","text":"package helps create maps, tables, figures planning documents using open spatial data. birdseyeview designed work overedge package relies sf, ggplot2, gt.","code":""},{"path":[]},{"path":"/reference/birdseyeview-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"birdseyeview: Make Planning Maps, Tables, and Visualizations — birdseyeview-package","text":"Maintainer: Eli Pousson eli.pousson@gmail.com (ORCID)","code":""},{"path":"/reference/get_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get markers — get_markers","title":"Get markers — get_markers","text":"Get markers","code":""},{"path":"/reference/get_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get markers — get_markers","text":"","code":"get_markers(   data,   groupname_col = \"group\",   group_meta = NULL,   group_join = sf::st_intersects,   geocode = FALSE,   address_col = \"address\",   point = TRUE,   crs = NULL,   fn = NULL,   ... )"},{"path":"/reference/get_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get markers — get_markers","text":"data Data markers, passed data parameter `overedge::get_location_data` groupname_col Group column name, used join group metadata group_meta non-spatial data frame; Default: 'group' group_meta Group metadata data frame sf object intersect markers; Default: NULL group_join join function used sf::st_join group_meta sf object, Default: sf::st_intersects() geocode TRUE, geocode data using `tidygeocoder::geo` convert sf `overedge::df_to_sf`, Default: FALSE address_col Address column, used geocode TRUE Default: 'address' point TRUE, convert geometry POINT sf::st_centroid(), Default: TRUE crs Coordinate reference system markers, Default: NULL fn Function apply data results; gives warning data grouped; Default: NULL ... Additional parameters passed `overedge::get_location_data`","code":""},{"path":"/reference/gt_geom_sf_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add maps of simple features into rows of a `gt` table — gt_geom_sf_rows","title":"Add maps of simple features into rows of a `gt` table — gt_geom_sf_rows","text":"Add maps simple features rows `gt` table ggplot2. Function naming convention borrowed gtExtras <https://jthomasmock.github.io/gtExtras/reference/gt_img_rows.html>","code":""},{"path":"/reference/gt_geom_sf_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add maps of simple features into rows of a `gt` table — gt_geom_sf_rows","text":"","code":"gt_geom_sf_rows(   gt_object,   mapping = NULL,   fill = NA,   color = \"black\",   size = 1,   linetype = \"solid\",   height = 100,   asp = 1,   fn = NULL,   ... )"},{"path":"/reference/gt_geom_sf_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add maps of simple features into rows of a `gt` table — gt_geom_sf_rows","text":"gt_object existing gt table object class gt_tbl. gt_object must convertible sf object sf::st_as_sf drop geometry creating sf object. mapping aesthetic mapping passed layer_location_data, Default: NULL fill Fill (used polygon geometry), Default: NA color Color (used polygon, point, line geometry), Default: 'black' size Color (used polygon, point, line geometry), Default: 1 linetype Color (used polygon line geometry), Default: 'solid' height absolute height (px) map table cell asp aspect ratio map table cell. fn Optional rowwise function results ggplot2 map replaces geometry column.","code":""},{"path":"/reference/layer_group_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make group layers — layer_group_data","title":"Make group layers — layer_group_data","text":"Make group layers","code":""},{"path":"/reference/layer_group_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make group layers — layer_group_data","text":"","code":"layer_group_data(   data,   mapping = NULL,   groupname_col = \"group\",   geom = \"sf\",   layers = TRUE,   ... )"},{"path":"/reference/layer_group_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make group layers — layer_group_data","text":"data sf object including data area. data may also url file path. data can name data object , package filetype provided, cached external file. mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. groupname_col Group column name geom ggplot2 geom use, Default: 'sf'. Options include \"sf\" (geom_sf), \"icon\" (geom_sf_icon), \"text\" (geom_sf_text), \"label\" (geom_sf_label), \"textsf\", \"labelsf\", \"text_repel\", \"label_repel\". layers `TRUE`; return list layers; `FALSE`; return list ggplot2 maps; defaults `TRUE` ... Additional parameters passed `overedge::layer_location_data`","code":""},{"path":"/reference/layer_number_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"FUNCTION_TITLE — layer_number_markers","title":"FUNCTION_TITLE — layer_number_markers","text":"FUNCTION_DESCRIPTION","code":""},{"path":"/reference/layer_number_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FUNCTION_TITLE — layer_number_markers","text":"","code":"layer_number_markers(   data,   number_col = NULL,   groupname_col = NULL,   size = 5,   style = \"roundrect\",   ... )"},{"path":"/reference/layer_number_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FUNCTION_TITLE — layer_number_markers","text":"data PARAM_DESCRIPTION number_col PARAM_DESCRIPTION, Default: NULL groupname_col PARAM_DESCRIPTION, Default: NULL size PARAM_DESCRIPTION, Default: 5 style PARAM_DESCRIPTION, Default: 'round' ... PARAM_DESCRIPTION","code":""},{"path":"/reference/layer_number_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FUNCTION_TITLE — layer_number_markers","text":"OUTPUT_DESCRIPTION","code":""},{"path":"/reference/layer_number_markers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FUNCTION_TITLE — layer_number_markers","text":"DETAILS","code":""},{"path":[]},{"path":"/reference/layer_number_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FUNCTION_TITLE — layer_number_markers","text":"","code":"if (FALSE) { if (interactive()) {   ggplot2::ggplot() +     layer_number_markers(       data = mapbaltimore::parks,       groupname_col = \"park_district\"     ) } }"},{"path":"/reference/layer_show_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a map layer showing a location in context of another area or location — layer_show_context","title":"Create a map layer showing a location in context of another area or location — layer_show_context","text":"Intended use inset_map function.","code":""},{"path":"/reference/layer_show_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a map layer showing a location in context of another area or location — layer_show_context","text":"","code":"layer_show_context(   data = NULL,   fill = \"gray70\",   color = \"black\",   context = NULL,   context_aes = list(fill = \"white\", color = \"black\", alpha = 1, ...),   layer_between = NULL,   crs = NULL,   neatline = TRUE,   ... )"},{"path":"/reference/layer_show_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a map layer showing a location in context of another area or location — layer_show_context","text":"data sf object location data fill Fill color location data color Edge color location data context sf bbox object context area `geom` layer context_aes list aesthetic attributes context area; must include fill color; defaults list(fill = \"white\", color = \"black\", ...) layer_between optional ggplot2 layer insert context layer location layer. crs coordinate reference system return neatline `TRUE`, add neatline layer returned layer ... Additional parameters passed overedge::layer_location_data location","code":""},{"path":[]},{"path":"/reference/layer_show_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Layer a location border into a ggplot2 map — layer_show_location","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"Helper function make ggplot2 layer data returned get_location","code":""},{"path":"/reference/layer_show_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"","code":"layer_show_location(   mapping = ggplot2::aes(),   data = NULL,   type = NULL,   name = NULL,   id = NULL,   location = NULL,   label_geom = NULL,   name_col = \"name\",   id_col = \"id\",   index = NULL,   label = NULL,   union = FALSE,   smooth = TRUE,   crs = NULL,   color = \"gray40\",   linetype = \"dashed\",   size = 1,   fill = NA,   dist = NULL,   diag_ratio = NULL,   unit = NULL,   asp = NULL,   mask = FALSE,   neatline = FALSE,   ... )"},{"path":"/reference/layer_show_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data Data location show. type Type location return. Type can sf object, e.g. data frame multiple neighborhoods character string can passed get_location_data. index provided, character can also character string match name list. name Location name return. id Location id return. id coerced character numeric match class id_col type. location address, bounding box (bbox), simple feature (sf) object passed st_filter. valid address addresses geocoded geo), converted simple feature object, used spatial filter. bbox objects converted using sf_bbox_to_sf(). Multiple addresses supported. name_col Column name type name values, Default: 'name' Required name provided. id_col Column name type id values, Default: 'id'. Required id provided. index Optional list used match type data, Default: NULL label label type (e.g. \"text\", \"label\") union TRUE, location geometry unioned st_union names combined single value. Default: FALSE. crs Coordinate reference system return; defaults NULL returns data using coordinate reference system provided type location. color Color location; defaults \"black\". linetype Line type location; defaults \"dashed\". fill Fill location; defaults \"NA\". dist buffer distance units. Optional. diag_ratio ratio diagonal distance area's bounding box used buffer distance. e.g. diagonal distance 3000 meters \"diag_ratio = 0.1\"  300 meter used. Ignored dist provided. unit unit adjust location dist diag_ratio; defaults \"meter\" asp Aspect ratio width height numeric value (e.g. 0.33) character (e.g. \"1:3\"). numeric, get_asp() returns value without modification. mask sf bbox object define edge mask. diag_ratio, dist, asp parameters ignored mask provided. defaults NULL neatline TRUE, add layer_neatline expand = TRUE; defaults FALSE. ... Additional parameters passed get_location data `NULL`.","code":""},{"path":"/reference/layer_show_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Layer a location border into a ggplot2 map — layer_show_location","text":"list ggplot2 geoms","code":""},{"path":[]},{"path":"/reference/layer_show_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a marker layer to a map with or without numbered markers — layer_show_markers","title":"Add a marker layer to a map with or without numbered markers — layer_show_markers","text":"Add marker layer map without numbered markers","code":""},{"path":"/reference/layer_show_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a marker layer to a map with or without numbered markers — layer_show_markers","text":"","code":"layer_show_markers(   data,   mapping = NULL,   get = TRUE,   groupname_col = \"group\",   group_meta = NULL,   style = NULL,   crs = NULL,   fn = NULL,   number = FALSE,   number_col = NULL,   ... )  layer_number_markers(   data,   mapping = NULL,   number_col = NULL,   groupname_col = NULL,   size = 5,   style = \"roundrect\",   geom = \"label\",   ... )"},{"path":"/reference/layer_show_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a marker layer to a map with or without numbered markers — layer_show_markers","text":"data Data markers, passed data parameter `overedge::get_location_data` get `TRUE`, pass data get_markers. groupname_col Group column name, used join group metadata group_meta non-spatial data frame; Default: 'group' group_meta Group metadata data frame sf object intersect markers; Default: NULL style Style; defaults `NULL` `layer_show_markers` (supports \"facet\"); defaults \"roundrect\" `layer_number_markers`, crs Coordinate reference system markers, Default: NULL fn Function apply data results; gives warning data grouped; Default: NULL number `TRUE`, number markers using `layer_number_markers` number_col Name column numbers; defaults NULL. ... Additional parameters passed `overedge::layer_location_data` (include label.size, label.padding, label.r define alternate style) size Marker size, Default: 5","code":""},{"path":"/reference/layer_show_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a marker layer to a map with or without numbered markers — layer_show_markers","text":"ggplot2 layers","code":""},{"path":"/reference/layer_show_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a marker layer to a map with or without numbered markers — layer_show_markers","text":"","code":"if (FALSE) { if (interactive()) {   ggplot2::ggplot() +     layer_number_markers(       data = mapbaltimore::parks,       groupname_col = \"park_district\"     ) } }"},{"path":"/reference/make_inset_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a map with an inset context map using ggplot2 — make_inset_map","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"Works `layer_show_context`","code":""},{"path":"/reference/make_inset_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"","code":"make_inset_map(   map = NULL,   inset = NULL,   location = NULL,   context = NULL,   position = \"bottomright\",   nudge_x = 0,   nudge_y = 0,   ... )"},{"path":"/reference/make_inset_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"map plot map created ggplot2 inset plot map created ggplot2 location sf bbox object context sf bbox object location context, Default: NULL position inset map position, Default: 'bottomright' nudge_x nudge X position inset map, Default: 0 nudge_y nudge Y position inset map, Default: 0 ... Additional parameters passed layer_show_context","code":""},{"path":"/reference/make_inset_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"ggplot2 inset map added using patchwork","code":""},{"path":[]},{"path":"/reference/make_inset_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a map with an inset context map using ggplot2 — make_inset_map","text":"","code":"if (FALSE) { if (interactive()) {   map <-     ggplot2::ggplot() +     overedge::layer_location_data(data = mapbaltimore::get_area(\"neighborhood\", \"Harwood\")) +     overedge::layer_neatline(       data = mapbaltimore::get_area(\"neighborhood\", \"Harwood\"),       asp = \"8.5:11\"     )    location <-     mapbaltimore::get_area(\"neighborhood\", \"Harwood\")    context <-     mapbaltimore::baltimore_city    inset_context_map(     map = map,     location = location,     context = context,     position = \"bottomright\",     nudge_x = -0.05,     nudge_y = 0.05   ) } }"},{"path":"/reference/make_mapbox_basemap.html","id":null,"dir":"Reference","previous_headings":"","what":"Use snapbox to make a Mapbox basemap — make_mapbox_basemap","title":"Use snapbox to make a Mapbox basemap — make_mapbox_basemap","text":"Expect function shift using snapbox mapboxapi /pull request accepted: https://github.com/walkerke/mapboxapi/pull/18","code":""},{"path":"/reference/make_mapbox_basemap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use snapbox to make a Mapbox basemap — make_mapbox_basemap","text":"","code":"make_mapbox_basemap(   data,   map_style = snapbox::mapbox_gallery_moonlight(),   scale_ratio = 0.5,   access_token = Sys.getenv(\"MAPBOX_PUBLIC_TOKEN\"),   basemap = TRUE,   neatline = TRUE,   ... )  layer_show_mapbox(   data,   map_style = snapbox::mapbox_gallery_moonlight(),   scale_ratio = 0.5,   access_token = Sys.getenv(\"MAPBOX_PUBLIC_TOKEN\"),   basemap = FALSE,   neatline = FALSE,   ... )"},{"path":"/reference/make_mapbox_basemap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use snapbox to make a Mapbox basemap — make_mapbox_basemap","text":"data sf, sfc, bbox object; objects convertible overedge::as_bbox() map_style Map style, Default: snapbox::mapbox_gallery_moonlight() scale_ratio Scale ratio, Default: 1 access_token Access token, following default format public token mapboxapi::mb_access_token(), Default: Sys.getenv(\"MAPBOX_PUBLIC_TOKEN\") basemap FALSE, create stand alone layer; TRUE, layer precededed ggplot2::ggplot() allow use basempa, Default: TRUE neatline TRUE, add neatline matching provided data, Default: TRUE ... Additional parameter passed overedge::layer_neatline()","code":""},{"path":"/reference/make_mapbox_basemap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use snapbox to make a Mapbox basemap — make_mapbox_basemap","text":"layer_show_mapbox works make_mapbox_basemap defaults basemap neatline FALSE","code":""},{"path":[]},{"path":"/reference/make_marker_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Make marker map — make_marker_map","title":"Make marker map — make_marker_map","text":"Make marker map Make group layers Get locations map markers ","code":""},{"path":"/reference/make_marker_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make marker map — make_marker_map","text":"","code":"layer_show_markers(   data,   mapping = NULL,   prep = FALSE,   groupname_col = \"group\",   group_meta = NULL,   style = NULL,   crs = NULL,   fn = NULL,   number = FALSE,   number_col = NULL,   ... )  make_group_layers(   data,   mapping = NULL,   groupname_col = \"group\",   geom = \"sf\",   layers = TRUE,   ... )  get_markers(   data = NULL,   groupname_col = \"group\",   group_meta = NULL,   group_join = sf::st_intersects(),   geocode = FALSE,   address_col = \"address\",   point = TRUE,   crs = NULL,   fn = NULL,   ... )"},{"path":"/reference/make_marker_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make marker map — make_marker_map","text":"data Data mapping mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. crs coordinate reference system return fn Function apply data returning. ... Parameters passed selected geom geom ggplot2 geom use, Default: 'sf'. Options include \"sf\" (geom_sf), \"icon\" (geom_sf_icon), \"text\" (geom_sf_text), \"label\" (geom_sf_label), \"textsf\", \"labelsf\", \"text_repel\", \"label_repel\". layers defaults FALSE","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/tbl_marker_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a key for a marker map — tbl_marker_key","title":"Make a key for a marker map — tbl_marker_key","text":"Designed use maps created using `layer_show_markers()`","code":""},{"path":"/reference/tbl_marker_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a key for a marker map — tbl_marker_key","text":"","code":"tbl_marker_key(data, title_col = NULL, groupname_col = NULL, number_col = NULL)"},{"path":"/reference/tbl_marker_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a key for a marker map — tbl_marker_key","text":"data Data frame sf object marker data title_col Title column name, Default: NULL groupname_col Group column name, Default: NULL number_col Number column name, Default: NULL. NULL data contain column named \"number\", add number column created using `dplyr::row_number()` function.","code":""},{"path":"/reference/tbl_photo_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Create numbered photo key as a gt table (not working) — tbl_photo_key","title":"Create numbered photo key as a gt table (not working) — tbl_photo_key","text":"Designed work overedge::read_sf_exif function. information approach https://elipousson.github.io/posts/2021-03-06-creating--key-map--photographs--r/","code":""},{"path":"/reference/tbl_photo_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create numbered photo key as a gt table (not working) — tbl_photo_key","text":"","code":"tbl_photo_key(   data,   height = 240,   asp = 0.75,   photo_col = \"photo\",   title_col = \"title\",   title_size = \"large\",   title_align = \"right\",   number = FALSE,   orientation = NULL )"},{"path":"/reference/tbl_photo_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create numbered photo key as a gt table (not working) — tbl_photo_key","text":"data sf object data frame photo column containing file path url photos. height height pixels image table. asp Aspect ratio image (width/height) photo_col Photo path/url column name. title_col Title/description column name. title_size Title text size, Default: 'large' title_align Title tex alignment, Default: 'right' number TRUE, add number column 20% width photo column; defaults FALSE. may name conflict dataframe already contains column named \"rowid\". orientation Orientation filter data contains image_width image_height columns.","code":""},{"path":"/reference/tbl_photo_key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create numbered photo key as a gt table (not working) — tbl_photo_key","text":"Function naming convention inspired gtsummary package https://www.danieldsjoberg.com/gtsummary/index.html","code":""}]
