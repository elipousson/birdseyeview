% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/layer_show_mark.R
\name{layer_show_mark}
\alias{layer_show_mark}
\title{Use ggforce to create an annotation layer using simple feature data}
\usage{
layer_show_mark(
  data,
  fn = NULL,
  mapping = NULL,
  label_col = NULL,
  desc_col = NULL,
  geom = NULL,
  cast = TRUE,
  expand = ggplot2::unit(5, "mm"),
  radius = expand,
  ...
)
}
\arguments{
\item{data}{A sf, sfc, or bbox object that can be converted with
\link[overedge:as_sf]{overedge::as_sf}}

\item{fn}{Function to apply to data before passing to geom, typically a
predicate or filter to define area for annotation. A filter can also be
passed to any of the ggforce functions using the filter aesthetic. Default:
NULL}

\item{mapping}{Aesthetic mapping to pass to geom, Default: NULL}

\item{geom}{geom to use for layer ("rect", "circle", "ellipse", or "hull"),
Default: NULL}

\item{cast}{If TRUE, cast MULTIPOLYGON and POLYGON data to POINT; defaults to
TRUE.}

\item{expand}{defaults to ggplot2::unit(5, "mm")}

\item{radius}{defaults to expand}

\item{...}{Additional parameters passed to ggforce annotation geoms.}
}
\description{
Use \code{\link[ggforce:geom_mark_rect]{ggforce::geom_mark_rect()}}, \code{\link[ggforce:geom_mark_circle]{ggforce::geom_mark_circle()}},
\code{\link[ggforce:geom_mark_ellipse]{ggforce::geom_mark_ellipse()}}, or \code{\link[ggforce:geom_mark_hull]{ggforce::geom_mark_hull()}} to annotate
simple feature objects. This function modifies the geometry and sets the stat
to "st_coordinates" to make it easy to use these annotation geoms with simple
feature objects.
}
\section{Geometry conversion for MULTIPOLYGON or POLYGON data}{


If cast is \code{FALSE} and the data geometry type is MULTIPOLYGON or POLYGON, the
annotation uses a centroid for the annotation geometry. If cast is \code{TRUE},
the data is converted to POINT geometry using \code{\link[sf:st_cast]{sf::st_cast()}} and the
modified geometry passed on to selected geom.
}

\section{Setting label and description}{


Labels and descriptions can be included in the aesthetic mapping for the
layer consistent with the standard documented approaches for all four
functions.

Labels and descriptions also can be set in two non-standard ways:
\itemize{
\item Setting label_col and/or or desc_col to character strings with the column
names for labels and/or descriptions
\item Setting label_col and/or desc_col with the value of the label/description
}

If the first approach is used, label_col and desc_col can also can be
created or modified by a function provided to the fn parameter. Otherwise,
the columns must be present in the data to work. If the second approach is
used, the length and order of vector provided to label_col and/or desc_col
must match that length and order of the data (after the fn is applied).
}

\examples{
\dontrun{
if (interactive()) {
  library(ggplot)
  library(overedge)

  ggplot() +
    layer_location_data(
      data = "neighborhoods",
      package = "mapbaltimore"
    ) +
    layer_show_mark(
      data = get_location(
        type = "council district",
        name = "District 12",
        package = "mapbaltimore"
      ),
      geom = "hull",
      color = "red",
      size = 1.5
    )
}
}
}
\seealso{
\itemize{
\item \code{\link[ggforce]{geom_mark_rect}}
\item \code{\link[ggforce]{geom_mark_circle}}
\item \code{\link[ggforce]{geom_mark_ellipse}}
\item \code{\link[ggforce]{geom_mark_hull}}
}
}
